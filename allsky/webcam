#!/bin/bash

# ****************************************************************************************************************************
#
# RASPBERRY PI ALLSKY CAMERA
# --------------------------
# Designed principally to take night time images of the whole sky once every few minutes, it has been expanded
# to take allsky images during the daytime too and to make a 30 second movie of the visible sky both day and night.  
# To do this it needs to take account of varying light conditions for day and night times for any location on earth.
#
# This is webcam a bash script file.  It's purpose is to produce a crontab file that runs in /var/spool/crontabs/root.
# This controls a Raspberry Pi Camera that takes a still image of the sky every 2 minutes during the day and every 
# 4 minutes at night. The webcam runs 24/7 and needs to different exposure settings for Day and Night time images.
#
# Additionally webcam makes two movies per day of for daytme and one for night.  These movies and the camera exposures
# are governed by the daily sunrise and sunset times.  Further civil twilight is used to represent twilight.
# Civil twilight is defined as when the sun is 6 degrees below the horizon.  Nautical twilight is when the
# sun is 12 degrees below horizon and asronomical twilight is 18 degrees below horizon.
#
# The sunrise, sunset and twilight times are supplied by sunwait https://github.com/risacher/sunwait which provides
# HH:MM or a Poll function that gives simple DAY or NIGHT responses.  If not Day or Night then it must be Twilight.
# Twilight (rise and set) may be Civil, Nautical or Astonomical.  Time offsets are permitted.  Latitude & Logitude
# are needed for sunwait to work accurately or it just defaults to Now York.
#
# So far Civil Twilight seems to work best for the Raspi-Pi 2 Camera that uses a Sony IMX219 colour sensor.
#
# Given that the above times change everyday for every latitude new times are needed everyday for:
# - Morning Twilight
# - Evening Twilight
#
# These times also govern the time when the day and night movies start and end.
#
# Movies are made by copying a still image every 3 minutes (or whatever the cap variable is set to) the $HOME/pics directory.
# Every 10 minutes (or whatever the concat variable is set to) these images are concatenated into a movie by ffmpeg.
# Copied image sare kept for one day and then deleted whe a new day or night movie is produced.
#
# All this is controlled by bash shell script files which are run by the created crontab file.
# Still image viewing is done as a webpage via lightppd in /var/www/html/ index.html and webcam.php.
# There are a few other php files to show the day and night movies and a page for daily suntimes and an about.php page.
#
# Prerequisites are that:
# - latitude and longitude for the site are set
# - image capture is not less than the time it takes raspistill to take a night time image.  This is about 1 minute 40 seconds
# - the concat variable is not less than the cap variable.
#
# Notes
#
# It is possible to adjust the sunwait times but care must be taken to keep the "x" time to always be later than the sun time.
# There is a DS18B20 temperature probe incorporated that is needed for the web pages to run.  If you do not have a DS18B20 installed
# you need to comment out the DS18B20 Outside Temerature code in webcam.php, index.php and about.php.  The is will work again.
#
# Files used and descriptions
# In /home/allsky
# webcam - this file.  The core of the system
# daily - stores the daily suntimes and other timing data elements for use by the system and  webpage files
# state - stores a single bye, one letter either T, D or N.  Used only by webcam.php to display the camera state on screen
# gps - stores the current  Latitude and Longitude location.  Provides current gps cordinates to /var/www/html/suntimes.php.
# daily_times.txt - al list of  today's suntimes.  JUst used for reference with cat daily_times.xtx
#
# In $HOME/pics
# . copypic.sh - used by cron to copy /run/shm/webcam.jpg cor concatenation
# . concatday.sh - used by cron to concatenate and append to the day movie and to copy it to /var/www/html
# . concatnight.sh - used by cron to concatenate and append to the night movie and to copy it to /var/www/html
# . newdaymovie.sh - used by cron to make a new day movie
# . newnightmovie.sh - used by cron to make a new night movie
# . webcamcron - crontab file generated by webcam at each run.  webcam copies this to /var/spool/cron/crontabs/root
# . movieday.mp4 - the current daytime move that is concatenated by concatday.sh
# . movienight.mp4 - the current night time move that is concatenated by concatnight.sh
#
# In $HOME/pics/day - repository for the day's images used for concaenation into the day movie.  Deleted at start of next day
# In $HOME/pics/night - repository for the day's images used for concaenation into the night movie.  Deleted at start of next night
#
# In /var/www/html
# . index.html - displays the current /run/shm/webcam.jpg image file via webcam.php.
# . index.php - displays rhe frontpage menu. Uses $HOME/daily.
# . webcam.php - called by index.html it does the backgound work to prepare and display the current image in /run/shm/webcam.jpg
#                Uses $HOME/daily and state.
# . movieday.php - displays the movieday.mp4 file
# . movienight.php - displays the movienight.mp4 file
# . suntimes.php - displays today's sunrise, sunset and the six twilight times. Uses $HOME/daily.
# . about.php - contains concise help and explanations. Uses $HOME/daily and the DS18B20 device
#
# ****************************************************************************************************************************

BIN="raspistill" # Name of camera control executable
EXE="/usr/bin/$BIN" # Directory of camera control executable
SCR="webcam"   # script / service name
HOME="/home/allsky" # Working directory

# *** S E T U P **********************************************************************
# Setup the Latitude and Longitude of your site
# Location
lat=35.07799110N # Pete home
lon=80.99140269W # Pete home

#lat=34.69590000N # GHRO
#lon=80.53660000W # GHRO

# Offsets advance or retard the Day or Twilight times in sunwait.  Anything in between is night
# Offsets.  May be + or - Positive numbers move twilight or sunrise/sunset closer to noon.
# Negative numbers move them away from noon. This adjusts when the camera changes from
# Twilight, Day and Night modes allowing a smoother transition of images from light to
# dark and vice versa.
# The camera offset allows the Day / Night exposure settings of the camera to be indempendent
# from Video Day / Night changover.  This helps to prevent spashes of light (or dark) at the
# beginning and end of videos>
#
# Shifts camera mode time at  Morning Twilight / Day
#       HH:MM
twiRise=-00:10 # Advance or delay the displayed time.
twiRiseP=-00:08 # Camera switch time.  Needs to be at least 1 minute EARLIER than the Video switch time.
twiRiseVid=-00:03 # Offset advance or delay for the Video Day / Night switch.

# Shifts camera mode time at Morning Twilight /  Day
#     HH:MM Not used anymore
SRise=00:00 # Advance or delay when the camera switches from night to day.
SRiseP=00:00 # Camera switch time. Needs to be at least 1 minute EARLIER than the Video switch time.
SRiseVid=00:00 # Offset advance or delay for the Video Day / Night switch.

# Shifts camera mode time at Day / Evening Twilight
# For the dusk  camera mode
#     HH:MM Not used anymore
SSet=-00:00 # Advance or delay when the camera switches from night to day.
SSetP=00:00 # Camera switch time.  Needs to be at least 1 minute EARLIER than the Video switch time.
SSetVid=-00:00 # Offset advance or delay for the Video Day / Night switch.

# Shifts camera mode time at Evening Twilight / NIght
# For the night camera mode
#       HH:MM
twiSet=-00:00 # Advance or delay when the camera switches from day to night.
twiSetP=-00:09 # Camera switch time.  Needs to be at least 1 minute EARLIER than the Video switch time.
twiSetVid=-00:12 # Offset advance or delay for the Video Day / Night switch.

# Number of minutes  between movie frame concatenation.  Default here is 10 [minutes]
concat=10

# Minutes between movie image copies.  Default is 3.
# raspistill can take up to 1 minute 45 seconds to process a night time image.
cap=3

# Interval for raspistill to take shots.  Night time needs to be longer since raspistill needs longer at night to complete.
shotD=2 # Daytime shot interval.  Default is 2 [minutes]
shotN=4 # Night time shot interval.  It can take raspistill up to 1 minute 45 seconds to process a night time image.  Default is 4 [minutes]

# Create the Day and Night variable arguments for raspistill with which to take still images.
# NOte that Horizonatal and Vertical Flip ( -hf and -vf ) may be needed to orinetate your images correctly.
Daytime="-ISO auto -hf -awb greyworld -n -ex auto -w 800 -h 600 -o /run/shm/$SCR.jpg"

# GHRO Night from Greg's camera
Nighttime="-ISO 800 -br 85 -co 100 -awb greyworld -n -ex night -ag 10.0 -dg 2.0 Â -ss 10000000 -w 800 -h 600 -o /run/shm/$SCR.jpg"

# My standard night parameters
#Nighttime="-ISO auto -hf -co 70 -awb greyworld -n -ex night -ag 9.0 -dg 2.0  -ss 6000000 -w 800 -h 600 -o /run/shm/$SCR.jpg"
# *** E N D   O F   S E T U P *************************************************************************

# Sunwait to get today's times
# Sunrise and set. 0 degrees below horizon
SunRise=$(sunwait list 1 sun rise offset $SRise $lon $lat)
SunRiseReal=$(sunwait list 1 sun rise $lon $lat)
SunSetReal=$(sunwait list 1 sun set $lon $lat)
SunRiseCam=$(sunwait list 1 sun rise offset $SRiseP $lon $lat)
SunSetCam=$(sunwait list 1 sun set offset $SSetP $lon $lat)
SunSet=$(sunwait list 1 sun set offset $SSet $lon $lat)
SunPollRise=$(sunwait poll sun rise offset $SRise $lon $lat)
SunPollSet=$(sunwait poll sun set offset $SSet $lon $lat)
SunRiseVid=$(sunwait list 1 sun rise offset $SRiseVid $lon $lat)
SunSetVid=$(sunwait list 1 sun set offset $SSetVid $lon $lat)

# Astronomical dawn and set. 18 degrees below horizon
AstroRise=$(sunwait list 1 astronomical rise offset $twiRise $lon $lat)
AstroRiseReal=$(sunwait list 1 astronomical rise $lon $lat)
AstroSetReal=$(sunwait list 1 astronomical set $lon $lat)
AstroSet=$(sunwait list 1 astronomical set offset $twiSet $lon $lat)
AstroRiseCam=$(sunwait list 1 astronomical rise offset $twiRiseP $lon $lat)
AstroSetx=$(sunwait list 1 astronomical set offset $twiSetP $lon $lat)
AstroPollRisCam=$(sunwait poll astronomical rise offset $twiRise $lon $lat)
AstroPollSet=$(sunwait poll astronomical set offset $twiSet $lon $lat)
AstroRiseVid=$(sunwait list 1 astronomical rise offset $twiRiseVid $lon $lat)
AstroSetVid=$(sunwait list 1 astronomical set offset $twiSetVid $lon $lat)

# Nautical dawn and set. 12 degrees below horizon
NauticalRise=$(sunwait list 1 nautical rise offset $twiRise $lon $lat)
NauticalRiseReal=$(sunwait list 1 nautical rise $lon $lat)
NauticalSetReal=$(sunwait list 1 nautical set  $lon $lat)
NauticalSet=$(sunwait list 1 nautical set offset $twiSet $lon $lat)
NauticalRiseCam=$(sunwait list 1 nautical rise offset $twiRiseP $lon $lat)
NauticalSetCam=$(sunwait list 1 nautical set offset $twiSetP $lon $lat)
NauticalPollRise=$(sunwait poll nautical rise offset $twiRise $lon $lat)
NauticalPollSet=$(sunwait poll nautical set offset $twiSet $lon $lat)
NauticalRiseVid=$(sunwait list 1 nautical rise offset $twiRiseVid $lon $lat)
NauticalSetVid=$(sunwait list 1 nautical set offset $twiSetVid $lon $lat)

# Civil dawn and set. 6 degrees below horizon
CivilRise=$(sunwait list 1 civil rise offset $twiRise $lon $lat)
CivilRiseReal=$(sunwait list 1 civil rise $lon $lat)
CivilSetReal=$(sunwait list 1 civil set $lon $lat)
CivilSet=$(sunwait list 1 civil set offset $twiSet $lon $lat)
CivilRiseCam=$(sunwait list 1 civil rise offset $twiRiseP $lon $lat)
CivilSetCam=$(sunwait list 1 civil set offset $twiSetP $lon $lat)
CivilPollRise=$(sunwait poll civil rise offset $twiRise $lon $lat)
CivilPollSet=$(sunwait poll civil set offset $twiSet $lon $lat)
CivilRiseVid=$(sunwait list 1 civil rise offset $twiRiseVid $lon $lat)
CivilSetVid=$(sunwait list 1 civil set offset $twiSetVid $lon $lat)
# **************************************************************

# Selects the Dawn / Twilight parameter (civil, nautical or astronomical) for cron and for raspistill arguments
# Can be civil, nautical or astronomical.  All four, Rise, Set, Poll and x must be set.
# This also defines the switch times between Day and Night Videos and the camera.
CameraAM=$CivilRiseCam
CameraPM=$CivilSetCam

twilightRiseCam=$CameraAM
twilightSetCam=$CameraPM

twilightSetVid=$CivilSetVid
twilightRiseVid=$CivilRiseVid

twilightRise=$CivilRise
twilightSet=$CivilSet

twilightPollRise=$CivilPollRise
twilightPollSet=$CivilPollSet

# Get the hours and minutes separated for the four times we are using.
# On time
#dawntwi=${twilightRise:0:5}; srise=${SunRise:0:5}; sset=${SunSet:0:5}; evetwi=${twilightSet:0:5}
# As above but hatever the "x" time advance or delay is set to.  This is to ensure that the sunwait poll time is past before webcam is run.
# This makes sure that we always get a definite trabsition condition because cron runs jobs to the second and whilst sunwait
# rounds times to  HH:MM actual suntimes do involve seconds.
dawntwi=${twilightRiseCam:0:5}; srise=${SunRise:0:5}; sset=${SunSet:0:5}; evetwi=${twilightSetCam:0:5}
dawntwiVid=${twilightRiseVid:0:5}; sRiseVid=${SunRiseVid:0:5}; sSetVid=${SunSetVid:0:5}; evetwiVid=${twilightSetVid:0:5}

# Chop up Hours and Minutes to get seperate variables.  Get rid of the " : "
amtH=${dawntwi:0:2}; amtM=${dawntwi:3:2} # Dawn
amtHVid=${dawntwiVid:0:2}; amtMVid=${dawntwiVid:3:2}
dayH=${srise:0:2}; dayM=${srise:3:2} # Day
dayHVid=${sRiseVid:0:2}; dayMVid=${sRiseVid:3:2}
twiH=${sset:0:2}; twiM=${sset:3:2} # Twilight
twiHVid=${sSetVid:0:2}; twiMVid=${sSetVid:3:2}
nigH=${evetwi:0:2}; nigM=${evetwi:3:2} # Night
nigHVid=${evetwiVid:0:2}; nigMVid=${evetwiVid:3:2}

# Truncate any entered Latitude and Longitude length strings to 2 places plus North / South, East / West.
# Latitude
latlength=${#lat}; latNS=$(($latlength-1)); latweb=${lat:0:$latNS}
latNS=${lat:latNS:1}; latweb=$(/usr/bin/printf "%.2f\n" "$latweb")
# Longitude
lonlength=${#lon}; lonEW=$(($lonlength-1)); lonweb=${lon:0:$lonEW}
lonEW=${lon:lonEW:1}; lonweb=$(/usr/bin/printf "%.2f\n" "$lonweb")

# Write the sun times to the daily file for use by the web pages.
echo -e $AstroRiseReal"\n"$NauticalRiseReal"\n"$CivilRiseReal"\n"$SunRiseReal"\n"$SunSetReal"\n"$CivilSetReal"\n"$NauticalSetReal"\n"$AstroSetReal>$HOME/daily
# Write the shot times to the daily file
echo -e $shotD"\n"$shotN"\n"$twilightRiseVid"\n"$twilightSetVid"\n"$CameraAM"\n"$CameraPM"\n"$concat>>$HOME/daily
# Write the gps coorinates to the gps file
echo -e $latweb$latNS"\n"$lonweb$lonEW>$HOME/gps

# Kill any running raspistill jobs
if pgrep raspistill
then
    kill $(pgrep raspistill) > /dev/null 2>&1
    echo "raspistill stopped"
else
    echo "raspistill not running"
fi

# ***************************************
# Decide what arguments raspistill gets to run with until the crontabs take over
# Set the  state flag to display in the still web image
# Day / Night
if [ $SunPollRise = DAY ]; then
  ARG=$Daytime
  arg1="D"
  timer=$shotD
elif [ $twilightPollRise = NIGHT ]; then
  ARG=$Nighttime
  arg1="N"
  timer=$shotN
fi
echo -n $arg1>$HOME/state

# Write the crontab file
echo "#* * * * *">$HOME/webcamcron
echo "#* * * * *">>$HOME/webcamcron
echo "#* * * * *">>$HOME/webcamcron
echo "#* * * * *">>$HOME/webcamcron
echo "#0123456789 command to be executed - - - - -">>$HOME/webcamcron
echo "# m h dom mon dow command">>$HOME/webcamcron
echo "# * *  *   *   *">>$HOME/webcamcron
echo "# | |  |  / __/">>$HOME/webcamcron
echo "# | |  / / /">>$HOME/webcamcron
echo "# * * * * *">>$HOME/webcamcron
echo "# . . . . .">>$HOME/webcamcron
echo "# . . . . ----- Day of week (0 - 7) (Sunday=0 or 7)">>$HOME/webcamcron
echo "# . . . ------- Month (1 - 12)">>$HOME/webcamcron
echo "# . . --------- Day of month (1 - 31)">>$HOME/webcamcron
echo "# . ----------- Hour (0 - 23)">>$HOME/webcamcron
echo "# ------------- Minute (0 - 59)">>$HOME/webcamcron
echo "# * * * * *">>$HOME/webcamcron
echo "# *************************************">>$HOME/webcamcron
echo "#">>$HOME/webcamcron

# Reboot the Pi if needed.
echo "# Reboot">>$HOME/webcamcron
echo "#5 4 * * * /sbin/shutdown -r +5">>$HOME/webcamcron
echo "">>$HOME/webcamcron

# Run at reboot.
echo "# Run at reboot">>$HOME/webcamcron
echo "@reboot $HOME/webcam">>$HOME/webcamcron
echo "">>$HOME/webcamcron

# Run webcam so the crontab file can be regenerated daily.
echo "# ***  R U N   W E B C A M   T O   G E N E R A T E   A   N E W   D A I L Y   C R O N T A B   F I L E.">>$HOME/webcamcron
echo "0 4 * * * /usr/sbin/service /usr/sbin/cron stop">>$HOME/webcamcron
echo "3 4 * * * $HOME/webcam> /dev/null 2>&1">>$HOME/webcamcron
echo "4 4 * * * /usr/sbin/service /usr/sbin/cron start">>$HOME/webcamcron
echo "">>$HOME/webcamcron

echo "# ***  RASPISTILL S T I L L   I M A G E   S H O T S   F O R  D A Y   A N D   N I G H T">>$HOME/webcamcron
echo "# *** DAYTIME STILL IMAGE SHOTS">>$HOME/webcamcron
echo "# DAYTIME CAMERA MODE [ $amtH:$amtM - $nigH:$nigM ] raspistill image grab every */$shotD minutes.">>$HOME/webcamcron
echo "$amtM $amtH * * * echo -n 'D'>$HOME/state">>$HOME/webcamcron
echo "$amtM $amtH * * * echo -e $shotD>>$HOME/daily">>$HOME/webcamcron
echo "$amtM $amtH * * * $EXE $Daytime">>$HOME/webcamcron
echo "#">>$HOME/webcamcron

echo "# Regular */$shotD minutes raspistill DAYTIME image shots">>$HOME/webcamcron
echo "*/$shotD $((amtH+1))-$((twiH)) * * * $EXE $Daytime">>$HOME/webcamcron
echo "#">>$HOME/webcamcron

# Day time raspistill fill in
echo "# DAY TIME fill in raspistill image grab AFTER $((amtH)) AM until hour as needed.">>$HOME/webcamcron
# Strip leading zero
amtMx=$(echo $amtM | sed 's/^0*//')
# If the incoming variable was 00 the it will now be nothing at all so make it "0".
if [[ ! $amtMx ]]; then
         amtMx=0
fi
for (( d = $amtMx ; d <=60 ; d = d + $shotD )); do
  if [[ "$d" -lt $amtMx+$shotD ]]; then
    continue
  fi
  if [[ "$d" -lt 60 ]]; then
     echo "$d $amtH * * * $EXE $Daytime">>$HOME/webcamcron
  else
     echo "0 $((amtH+1)) * * * $EXE $Daytime">>$HOME/webcamcron
  fi
done
echo "#">>$HOME/webcamcron

# raspistill time fill in when Daytime needs it
echo "# DAY TIME fill in raspistill image grab until NIGHT Camera Mode,  as needed.">>$HOME/webcamcron
# Strip leading zero
nigMx=$(echo $nigM | sed 's/^0*//')
# If the incoming variable was 00 the it will now be nothing at all so make$
if [[ ! $nigMx ]]; then
         nigMx=0
fi
for (( d = 0 ; d <=$nigMx-$shotD ; d = d + $shotD )); do
  if [[ "$d" -lt $shotD ]]; then
    continue
  fi
  if [[ "$d" -lt 60 ]]; then
     echo "$d $nigH * * * $EXE $Daytime">>$HOME/webcamcron
  else
     echo "0 $((nigH+1)) * * * $EXE $Daytime">>$HOME/webcamcron
  fi
done
echo "">>$HOME/webcamcron

echo "# *** NIGHT TIME CAMERA MODE [ $nigH:$nigM - $amtH:$amtM$ ] raspistill image grab every */$shotN minutes.">>$HOME/webcamcron
echo "$nigM $nigH * * * echo -n 'N'>$HOME/state">>$HOME/webcamcron
echo "$nigM $nigH * * * echo -e $shotN>>$HOME/daily">>$HOME/webcamcron
echo "$nigM $nigH * * * $EXE $Nighttime">>$HOME/webcamcron
echo "#">>$HOME/webcamcron

echo "# NIGHT TIME STILL IMAGE SHOTS">>$HOME/webcamcron
echo "# Regular */$shotN minutes raspistill NIGHT TIME image shots">>$HOME/webcamcron
echo "*/$shotN $((nigH+1))-23 * * * $EXE $Nighttime">>$HOME/webcamcron
echo "*/$shotN 0-$((amtH-1)) * * * $EXE $Nighttime">>$HOME/webcamcron
echo "#">>$HOME/webcamcron

# Night time raspistill fill in
echo "# NIGHT TIME fill in raspistill image grab as needed.">>$HOME/webcamcron
# Strip leading zero
nigMx=$(echo $nigM | sed 's/^0*//')
# If the incoming variable was 00 the it will now be nothing at all so make$
if [[ ! $nigMx ]]; then
         nigMx=0
fi
for (( n = $nigMx ; n <= 60 ; n = n + $shotN )); do
  if [[ "$n" -lt $nigMx+$shotN ]]; then
    continue
  fi
  if [[ "$n" -lt 60 ]]; then
     echo "$n $nigH * * * $EXE $Nighttime">>$HOME/webcamcron
  else
     echo "0 $((nigH+1)) * * * $EXE $Nighttime">>$HOME/webcamcron
  fi
done
echo "">>$HOME/webcamcron

echo "# ***  M A K E  V I D E O S">>$HOME/webcamcron
echo "# ***  R E G U L A R  I M A G E   C O P Y  T O   M A K E   V I D E O S">>$HOME/webcamcron
echo "# Copy the images every */$cap minutes.   This for both Day and Night Videos.">>$HOME/webcamcron
echo "*/$cap * * * * $HOME/pics/copypic.sh> /dev/null 2>&1">>$HOME/webcamcron
echo "">>$HOME/webcamcron

echo "# ***  D A Y   V I D E O  [ $amtHVid:$amtMVid - $nigHVid:$nigMVid ]">>$HOME/webcamcron
echo "# Make a new Day time VIDEO">>$HOME/webcamcron
echo "$amtMVid $amtHVid * * * $HOME/pics/newdaymovie.sh> /dev/null 2>&1">>$HOME/webcamcron
echo "#">>$HOME/webcamcron

echo "# Regular */$concat minute concatenation.">>$HOME/webcamcron
echo "*/$concat $((amtHVid+1))-$((nigHVid-1)) * * * $HOME/pics/concatday.sh> /dev/null 2>&1">>$HOME/webcamcron
echo "#">>$HOME/webcamcron

# Write the DAY fill-in variables
echo "# Provide fill-in image concatenation if / as neccessary from [ $amtHVid:$amtHVid ] to keep the Daytime */$concat minute interval until [ $(( amtHVid+1 )):00 ].">>$HOME/webcamcron

# Strip leading zero
amtMxcam=$(echo $amtMVid | sed 's/^0*//')
# If the incoming variable was 00 the it will now be nothing at all so make$
if [[ ! $amtMxcam ]]; then
         amtMxcam=0
fi
for (( cD = $amtMxcam ; cD <= 60 ; cD = cD + $concat )); do
  if [[ "$cD" -lt $amtMxcam+$concat ]]; then
    continue
  fi
   if [[ "$cD" -lt 60 ]]; then
      echo "$cD $((amtHVid)) * * * $HOME/pics/concatday.sh> /dev/null 2>&1">>$HOME/webcamcron
   else
      echo "0 $((amtHVid+1)) * * * $HOME/pics/concatday.sh> /dev/null 2>&1">>$HOME/webcamcron
   fi
done
echo "">>$HOME/webcamcron

echo "# ***  N I G H T   V I D E O  [ $nigHVid:$nigMVid - $amtHVid:$amtMVid ]">>$HOME/webcamcron
echo "# Make a new Night time Video">>$HOME/webcamcron
echo "$nigMVid $nigHVid * * * $HOME/pics/newnightmovie.sh> /dev/null 2>&1">>$HOME/webcamcron
echo "# Regular $concat minute concatenation.">>$HOME/webcamcron
echo "*/$concat $((nigHVid+1))-23 * * * $HOME/pics/concatnight.sh> /dev/null 2>&1">>$HOME/webcamcron
echo "*/$concat 0-$((amtHVid-1)) * * * $HOME/pics/concatnight.sh> /dev/null 2>&1">>$HOME/webcamcron
echo "#">>$HOME/webcamcron

# Write the NIGHT fill-in variables
echo "# Provide fill-in image concatenation if / as neccessary from [ $nigHVid:$nigMVid ] to keep the Nighttime */$concat minute interval until [ $(( nigHVid+1 )):00 ].">>$HOME/webcamcron
# Strip leading zero
nigMVidFN=$(echo $nigMVid | sed 's/^0*//')
# If the incoming variable was 00 the it will now be nothing at all so make$
if [[ ! $nigMVidFN ]]; then
         nigMVidFN=0
fi
for (( d = 0 ; d <=$nigMVidFN ; d = d + $concat )); do
   if [[ "$d" -lt $concat ]]; then
     continue
fi
   if [[ "$d" -lt 60 ]]; then
     echo "$d $nigHVid * * * $HOME/pics/concatday.sh> /dev/null 2>&1">>$HOME/webcamcron
fi
done
echo "#">>$HOME/webcamcron

# Write the NIGHT fill-in variables
echo "# Provide fill-in image concatenation if / as neccessary from [ $nigHVid:$nigMVid ] to keep the Nighttime */$concat minute interval until [ $(( nigHVid+1 )):00 ].">>$HOME/webcamcron
# Strip leading zero
nigMxcam=$(echo $nigMVid | sed 's/^0*//')
# If the incoming variable was 00 the it will now be nothing at all so make$
if [[ ! $nigMxcam ]]; then
         nigMxcam=0
fi
for (( cN = $nigMxcam ; cN <= 60 ; cN = cN + $concat )); do
  if [[ "$cN" -lt $nigMxcam+$concat ]]; then
    continue
  fi
   if [[ "$cN" -lt 60 ]]; then
      echo "$cN $((nigHVid)) * * * $HOME/pics/concatnight.sh> /dev/null 2>&1">>$HOME/webcamcron
   else
      echo "0 $((nigHVid+1)) * * * $HOME/pics/concatnight.sh> /dev/null 2>&1">>$HOME/webcamcron
   fi
done
echo "">>$HOME/webcamcron

echo "# $(date)">>$HOME/webcamcron
echo "# E N D">>$HOME/webcamcron

# WRITE STUFF TO FILES AND FINISH UP.
# Show the current raspistill arguments.

echo $arg1 $EXE $ARG

# Write the camera state (T, D, N) as a single byte.
echo -n $arg1>$HOME/state

# Write the actual shot time to the daily file for index.html to use as its timer.
echo -e $timer>>$HOME/daily

# Display today's Sun rise and set times and the times when the camea switches modes and when the Day / Night video switching happens.
echo
echo "E V E N T                                      HH:MM OFFSET"
echo "---------------------------------------------  ----- ------"
echo "Astronomical Rise (18 degrees below horizon): " $AstroRise $twiRise
echo "Astronomical Rise (Real)                    : " $AstroRiseReal
echo "Nautical Rise (12 degrees below horizon)    : " $NauticalRise $twiRise
echo "Nautical Rise (Real)                        : " $NauticalRiseReal
echo "Civil Rise (6 degrees below horizon)        : " $CivilRise $twiRise
echo "Civil Rise (Real)                           : " $CivilRiseReal
echo "CAMERA switches from Night to Day           : " $twilightRiseCam $twiRiseP
echo "VIDEO switches from Night to Day            : " $twilightRiseVid $twiRiseVid
echo "Sunrise (0 degrees below horizon)           : " $SunRise $SRiseP
echo "Sunrise (Real)                              : " $SunRiseReal
echo "Sunset (0 degrees below horizon)            : " $SunSet $SSetP
echo "Sunset (Real)                               : " $SunSetReal
echo "Civil Set (6 degrees below horizon)         : " $CivilSet $twiSet
echo "Civil Set (Real)                            : " $CivilSetReal
echo "CAMERA switches from Day to Night           : " $CameraPM $twiSetP
echo "VIDEO switches from Day to Night            : " $twilightSetVid $twiSetVid
echo "Nautical Set (12 degrees below horizon)     : " $NauticalSet $twiSet
echo "Nautical Set (Real)                         : " $NauticalSetReal
echo "Astronomical Set (18 degrees below horizon) : " $AstroSet $twiSet
echo "Astronomical Set (Real)                     : " $AstroSetReal
# *******************************************************************************

# Write the same data to /home/allsky/daily_times.txt
echo " ">/home/allsky/daily_times.txt
echo "E V E N T                                      HH:MM OFFSET">>/home/allsky/daily_times.txt
echo "---------------------------------------------  ----- ------">>/home/allsky/daily_times.txt
echo "Astronomical Rise (18 degrees below horizon):  $AstroRise $twiRise">>/home/allsky/daily_times.txt
echo "Astronomical Rise (Real)                    :  $AstroRiseReal">>/home/allsky/daily_times.txt
echo "Nautical Rise (12 degrees below horizon)    :  $NauticalRise $twiRise">>/home/allsky/daily_times.txt
echo "Nautical Rise (Real)                        :  $NauticalRiseReal">>/home/allsky/daily_times.txt
echo "Civil Rise (6 degrees below horizon)        :  $CivilRise $twiRise">>/home/allsky/daily_times.txt
echo "Civil Rise (Real)                           :  $CivilRiseReal">>/home/allsky/daily_times.txt
echo "CAMERA switches from Night to Day           :  $twilightRiseCam $twiRiseP">>/home/allsky/daily_times.txt
echo "VIDEO switches from Night to Day            :  $twilightRiseVid $twiRiseVid">>/home/allsky/daily_times.txt
echo "Sunrise (0 degrees below horizon)           :  $SunRise $SRiseP">>/home/allsky/daily_times.txt
echo "Sunrise (Real)                              :  $SunRiseReal">>/home/allsky/daily_times.txt
echo "Sunset (0 degrees below horizon)            :  $SunSet $SSetP">>/home/allsky/daily_times.txt
echo "Sunset (Real)                               :  $SunSetReal">>/home/allsky/daily_times.txt
echo "Civil Set (6 degrees below horizon)         :  $CivilSet $twiSet">>/home/allsky/daily_times.txt
echo "Civil Set (Real)                            :  $CivilSetReal">>/home/allsky/daily_times.txt
echo "CAMERA switches from Day to Night           :  $CameraPM $twiSetP">>/home/allsky/daily_times.txt
echo "VIDEO switches from Day to Night            :  $twilightSetVid $twiSetVid">>/home/allsky/daily_times.txt
echo "Nautical Set (12 degrees below horizon)     :  $NauticalSet $twiSet">>/home/allsky/daily_times.txt
echo "Nautical Set (Real)                         :  $NauticalSetReal">>/home/allsky/daily_times.txt
echo "Astronomical Set (18 degrees below horizon) :  $AstroSet $twiSet">>/home/allsky/daily_times.txt
echo "Astronomical Set (Real)                     :  $AstroSetReal">>/home/allsky/daily_times.txt
echo " ">>/home/allsky/daily_times.txt
echo "$(date)">>/home/allsky/daily_times.txt

# *******************************************************************************
# This where the new cron file (webcamcron) gets sent to do its work.
service cron stop
chmod 600 $HOME/webcamcron
rm /var/spool/cron/crontabs/root
cp $HOME/webcamcron /var/spool/cron/crontabs/root
chmod 600 /var/spool/cron/crontabs/root
service cron start
date
# ** E N D ***********************************************************************
